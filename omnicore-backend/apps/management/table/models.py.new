# filepath: c:\Users\Victus\Documents\GitHub\omnicore-web\omnicore-backend\apps\management\table\models.py.new
from django.db import models
from apps.tenants.models import Tenant
import uuid


class RestaurantTable(models.Model):
    """Restaurant table model"""

    STATUS_CHOICES = [
        ("available", "Available"),
        ("occupied", "Occupied"),
        ("reserved", "Reserved"),
        ("inactive", "Inactive"),
    ]
    
    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)
    tenant = models.ForeignKey(
        Tenant, on_delete=models.CASCADE, related_name="restaurant_tables"
    )
    number = models.CharField(max_length=20)  # Table number/identifier (e.g., "T1", "Corner 5")
    name = models.CharField(max_length=100, blank=True)  # Optional descriptive name
    capacity = models.IntegerField(default=4)  # Default capacity of 4 people
    status = models.CharField(max_length=20, choices=STATUS_CHOICES, default="available")
    area = models.CharField(max_length=100, blank=True)  # Area/section of the restaurant (e.g., "Patio", "Main Hall")
    is_active = models.BooleanField(default=True)
    notes = models.TextField(blank=True)  # Any additional notes about the table
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    class Meta:
        verbose_name = "Restaurant Table"
        verbose_name_plural = "Restaurant Tables"
        ordering = ["number"]
        unique_together = ["tenant", "number"]  # Table numbers must be unique within a tenant

    def __str__(self):
        return f"{self.number} - {self.name} ({self.tenant.name})"
