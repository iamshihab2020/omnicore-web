meta {
  name: Create Menu Item
  type: http
  seq: 2
}

post {
  url: http://localhost:8000/api/menu/items/
  body: json
  auth: bearer
}

headers {
  Content-Type: application/json
  X-Tenant-Workspace: example-restaurant
}

auth:bearer {
  token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQ5ODEwNjAwLCJpYXQiOjE3NDk4MDcwMDAsImp0aSI6ImFhYzcyOTQxMDA0NDRmZjM5NGEwNTNkYjkxNjc0YmYwIiwidXNlcl9pZCI6IjE5MzYxNDA2LWE3N2UtNDc1OS1hNGY4LTcwNDQ3MmYwODUwYSJ9.Lghspui7lROohFKGoesAfCDIF_3ko6eXN1rPAXWPQNs
}

body:json {
  {
    "name": "Grilled Chicken Salad",
    "description": "Fresh mixed greens with grilled chicken breast, cherry tomatoes, and balsamic dressing",
    "price": 14.99,
    "cost": 5.50,
    "is_active": true,
    "preparation_time": 10,
    "category": "b5da702a-1998-4534-9b69-ca9d21e5457a"
  }
}

tests {
  test("Status code is 201", function() {
    expect(res.status).to.equal(201);
  });
  
  test("Menu item created successfully", function() {
    expect(res.body).to.have.property("id");
    expect(res.body).to.have.property("name");
    expect(res.body.name).to.equal("Grilled Salmon");
  });
  
  // Save the menu item ID
  if (res.body && res.body.id) {
    bru.setEnvVar("newMenuItemId", res.body.id);
  }
}

docs {
  Creates a new menu item for a specific tenant.
  Requires a valid access token in the Authorization header.
  User must have manager permissions or above in the tenant.
}
